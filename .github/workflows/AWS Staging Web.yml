name: Build,Push and Deploy to AWS Staging

on:
  push:
    branches:
      - staging
 

env:
  AWS_DEFAULT_REGION: ap-south-2
  EKS_CLUSTER_NAME: IN-Project-Hero-App-EKSCluster-Staging
  AWS_ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DEPLOYMENT_NAME: ph-web
  NEXT_PUBLIC_APP_ENV: STAGE

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push docker image to Amazon ECR
        env:
           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
           REPOSITORY: in-project-hero-ecr-repo-staging
           IMAGE_TAG: ph-web
           
        run: |
            docker build --build-arg NEXT_PUBLIC_APP_ENV="$NEXT_PUBLIC_APP_ENV" -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
            

      - name: Configure kubectl
        uses: azure/setup-kubectl@v1
        with:
          install-kubectl: true

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Update kube config
        run: aws eks update-kubeconfig --name IN-Project-Hero-App-EKSCluster-Staging 

      
      - name: Deploy
        env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |-                                                                    
          cd AWS  
          kubectl apply -f .
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide           
