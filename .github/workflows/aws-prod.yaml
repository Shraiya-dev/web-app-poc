name: Build,Push and Deploy to AWS Prod

on:
  workflow_dispatch:
  
env:
  EKS_CLUSTER_NAME: IN-Project-Hero-App-EKSCluster-Prod
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  DEPLOYMENT_NAME: ph-web
  NEXT_PUBLIC_APP_ENV: PROD

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set branch name  
        run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      
      - name: Set branch environments
        run: |-
          echo "NEXT_PUBLIC_APP_ENV=${{env.NEXT_PUBLIC_APP_ENV}}" >> "$GITHUB_ENV"
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr-prod-repo
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push docker image to Amazon ECR
        env:
           REGISTRY: ${{ steps.login-ecr-prod-repo.outputs.registry }}
           REPOSITORY: in-project-hero-ecr-repo-prod/ph-web
           IMAGE_TAG: ph-web
           
        run: |-
            docker build --build-arg NEXT_PUBLIC_APP_ENV="$NEXT_PUBLIC_APP_ENV" -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
            
      - name: Configure kubectl
        uses: azure/setup-kubectl@v1
        with:
          install-kubectl: true


      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME

      
      - name: Deploy
        env:
         REGISTRY: ${{ steps.login-ecr-prod-repo.outputs.registry }}
        run: |-                                                                    
          cd AWS  
          kubectl apply -f .
          kubectl rollout restart deployment/$DEPLOYMENT_NAME
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
